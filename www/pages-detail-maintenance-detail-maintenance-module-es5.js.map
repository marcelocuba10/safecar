{"version":3,"sources":["webpack:///src/app/pages/detail-maintenance/detail-maintenance.page.html","webpack:///src/app/pages/detail-maintenance/detail-maintenance-routing.module.ts","webpack:///src/app/pages/detail-maintenance/detail-maintenance.module.ts","webpack:///src/app/pages/detail-maintenance/detail-maintenance.page.scss","webpack:///src/app/pages/detail-maintenance/detail-maintenance.page.ts"],"names":["routes","path","component","DetailMaintenancePageRoutingModule","imports","forChild","exports","DetailMaintenancePageModule","declarations","DetailMaintenancePage","actRoute","apiService","navCtrl","appService","loadingCtrl","maintenance","id","snapshot","paramMap","get","getMaintenanceById","getWorkshops","$event","dateFormat","getDate","console","log","subscribe","response","workshops","data","formValidation","presentLoading","updateMaintenance","loading","dismiss","presentToast","navigateRoot","createMaintenance","error","create","message","present","selector","template"],"mappings":"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","file":"pages-detail-maintenance-detail-maintenance-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/maintenances\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"ion-text-center\\\" *ngIf=\\\"id\\\">Detalhes da Manutenção</ion-title>\\n    <ion-title class=\\\"ion-text-center\\\" *ngIf=\\\"!id\\\">Adicionar Nova Manutenção</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button>\\n        <ion-icon name=\\\"ellipsis-vertical-outline\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <center>\\n        <img style=\\\"width:70%\\\" src=\\\"../../../assets/img/no-image.png\\\" />\\n      </center>\\n      <ion-segment mode=\\\"ios\\\" value=\\\"all\\\" style=\\\"margin-bottom: 16px;\\\">\\n        <ion-segment-button value=\\\"all\\\">\\n          Detalhes\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"favorites\\\">\\n          Fotos\\n        </ion-segment-button>\\n      </ion-segment>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">(*)Data</ion-label>\\n        <ion-datetime (ionChange)=\\\"onChange($event)\\\" autofocus required [(ngModel)]=\\\"maintenance.data\\\" display-format=\\\"DD/MM/YYYY\\\" min=\\\"1970-01-01\\\" max=\\\"2021-12-31\\\"></ion-datetime>\\n      </ion-item>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">(*)KM</ion-label>\\n              <ion-input type=\\\"text\\\" required [(ngModel)]=\\\"maintenance.km\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-item>\\n              <ion-label position=\\\"stacked\\\">(*)Próximo KM</ion-label>\\n              <ion-input type=\\\"text\\\" required [(ngModel)]=\\\"maintenance.km_prox\\\"></ion-input>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>  \\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">(*)Manutenção</ion-label>\\n        <ion-select class=\\\"ion-text-capitalize\\\" interface=\\\"popover\\\" required [(ngModel)]=\\\"maintenance.manutencao\\\">\\n          <ion-select-option value=\\\"Filtro de Azeite\\\">Filtro de Azeite</ion-select-option>\\n          <ion-select-option value=\\\"Filtro de Aire\\\">Filtro de Aire</ion-select-option>\\n          <ion-select-option value=\\\"Filtro de Combustivel\\\">Filtro de Combustivel</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item class=\\\"select-placeholder\\\">\\n        <ion-label position=\\\"stacked\\\">(*)Mecanica</ion-label>\\n        <ion-select interface=\\\"popover\\\" required [(ngModel)]=\\\"maintenance.mecanica\\\" class=\\\"ion-text-capitalize\\\" placeholder=\\\"{{maintenance.mecanica}}\\\">\\n          <ion-select-option *ngFor=\\\"let workshop of workshops\\\" [value]=\\\"workshop.nome\\\">{{workshop.nome}}</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">(*)Custo</ion-label>\\n        <ion-input type=\\\"text\\\" required [(ngModel)]=\\\"maintenance.custo\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Observações</ion-label>\\n        <ion-textarea [(ngModel)]=\\\"maintenance.observacoes\\\" placeholder=\\\"...\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item-group class=\\\"ion-text-center ion-margin-top\\\">\\n        <ion-button mode=\\\"ios\\\" color=\\\"medium\\\" routerLink=\\\"/maintenances\\\">\\n          <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>Voltar\\n        </ion-button>\\n        <ion-button mode=\\\"ios\\\" color=\\\"success\\\" (click)=\\\"savedata(maintenance)\\\">\\n          <ion-icon class=\\\"m-icon\\\" name=\\\"save-outline\\\"></ion-icon>Salvar\\n        </ion-button>\\n      </ion-item-group>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DetailMaintenancePage } from './detail-maintenance.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailMaintenancePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DetailMaintenancePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DetailMaintenancePageRoutingModule } from './detail-maintenance-routing.module';\n\nimport { DetailMaintenancePage } from './detail-maintenance.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DetailMaintenancePageRoutingModule\n  ],\n  declarations: [DetailMaintenancePage]\n})\nexport class DetailMaintenancePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RldGFpbC1tYWludGVuYW5jZS9kZXRhaWwtbWFpbnRlbmFuY2UucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { Maintenance } from 'src/app/models/maintenance';\nimport { ApiService } from 'src/app/services/api.service';\nimport { AppService } from 'src/app/services/app.service';\n\n@Component({\n  selector: 'app-detail-maintenance',\n  templateUrl: './detail-maintenance.page.html',\n  styleUrls: ['./detail-maintenance.page.scss'],\n})\nexport class DetailMaintenancePage implements OnInit {\n\n  private id: any;\n  private maintenance = {} as Maintenance;\n  private loading: any;\n  private workshops: any;\n  private dateFormat: string;\n\n  constructor(\n    private actRoute: ActivatedRoute,\n    public apiService: ApiService,\n    private navCtrl: NavController,\n    private appService: AppService,\n    private loadingCtrl: LoadingController,\n  ) {\n    this.id = this.actRoute.snapshot.paramMap.get(\"id\");\n  }\n\n  ngOnInit() {\n\n    if (this.id) {\n      this.getMaintenanceById();\n    }\n\n    this.getWorkshops();\n\n  }\n\n  onChange($event) {\n    this.dateFormat = this.appService.getDate($event);\n    console.log(this.dateFormat);\n  }\n\n  public getMaintenanceById() {\n    this.apiService.getMaintenanceById(this.id).\n      subscribe(response => {\n        this.maintenance = response;\n        console.log(\"response\", this.maintenance);\n      });\n  }\n\n  public getWorkshops() {\n    this.apiService.getWorkshops().subscribe(response => {\n      this.workshops = response;\n      console.log(\"response:\", this.workshops);\n    })\n  }\n\n  async savedata(data) {\n\n    if (await this.appService.formValidation(data)) {\n      await this.presentLoading();\n      this.maintenance.data = this.dateFormat;\n\n      if (this.id) {\n        console.log(this.id);\n        console.log(this.maintenance);\n        try {\n          await this.apiService.updateMaintenance(this.id, this.maintenance).subscribe(response => {\n            this.loading.dismiss();\n            this.appService.presentToast(\"Manutenção atualizado com exito!\")\n            this.navCtrl.navigateRoot(\"/maintenances\");\n          })\n        } catch (error) {\n          this.appService.presentToast(error);\n          this.loading.dismiss();\n        }\n\n      } else {\n        try {\n          console.log(data);\n          this.apiService.createMaintenance(data).subscribe((response) => {\n            console.log('response:', response);\n            this.navCtrl.navigateRoot(\"/maintenances\");\n          });\n\n          this.loading.dismiss();\n          this.appService.presentToast(\"Manutenção criado com exito!\")\n          this.navCtrl.navigateRoot(\"/maintenances\");\n\n        } catch (error) {\n          this.appService.presentToast(error);\n          this.loading.dismiss();\n          console.log(error);\n        }\n      }\n    }\n  }\n\n  async presentLoading() {\n\n    this.loading = await this.loadingCtrl.create({ message: \"Espere..\" });\n    return this.loading.present();\n\n  }\n\n}\n"]}